<Chapter 01. ASP.NET의 이해>
1. 정적 웹 페이지와 동적 웹 페이지
정적 웹 페이지 : 수정하지 않는다면 늘 동일한 웹 페이지
동적 웹 페이지 : 사용자에 따라, 실시간으로 변화하는 내용에 따라, 저장된 데이터를 바탕으로 만들어지는 페이지

2. 웹 프로그래밍
웹을 기반으로 실행되는 프로그램을 웹 애플리케이션(응용 프로그램)이라 하고 이를 개발하는 것을 웹 프로그래밍 한다고 함

3. 동적 웹 페이지 개발 언어의 종류
동적 웹 페이지를 만들기 위해서는 웹 애플리케이션을 개발하여야 하고 개발에 사용되는 언어에는 ASP, ASP.NET, JSP, PHP, Ruby(on Rails) 등이 있음

4. ASP.NET의 특징
기존 ASP의 모든 기능을 제공하고 ASP와 완벽하게 호환
ASP의 문제(스파게티 코드, 한정된 데이터형 등) 해결
웹 애플리케이션을 구축하기 위한 프로그래밍 프레임워크(framework)
웹 애플리케이션을 실행하고 서비스하기 위해서는 IIS 서버 설치해야
Visual Web Developer 2010은 Visual Studio 2010에 포함되어 있는 통합 개발 환경으로 ASP.NET 웹 응용 프로그램을 만들 때 사용되는 여러 가지 기능 제공

5. 가상 디렉터리
가상 디렉터리란 물리적으로 루트 디렉터리 혹은 이에 종속된 서브 디렉터리가 아님에도 불구하고 웹에서 웹 사이트의 하위 디렉터리로 인식되는 디렉터리


<Chapter 02. 웹 페이지 만들기>
Visual Web Developer
Visual Web Developer는 Visual Studio의 일부로 웹 애플리케이션(응용 프로그램)을 개발하는데 필요한 여러 환경을 제공해주는 통합 개발 환경(IDE, Integrated Develpment Environment)이다.

ASP.NET 웹 사이트
ASP.NET 페이지를 만들기 구성하기 위해 먼저 ASP.NET 웹 사이트를 만든다.
ASP.NET 웹 사이트를 만들 때 사용 가능한 다양한 템플릿이 제공 된다.
[새 웹 사이트] 창에서 프로그래밍에 사용할 언어로 선택할 수 있는 것은 Visual Basic과 Visual C#이다.

HTML(Hypertext Markup Language)
HTML은 웹브라우저 상에서 웹 페이지 내의 글자나 이미지를 어떻게 표현할 것인지에 대해 알려주는 마크업(Markup)이 포함된 문서이다.
HTML은 선언문(declaration), 엘리먼트(element), 주석(comment) 등으로 구성된다.
HTML의 주석은 <!--와 --> 내에 기술한다. 
태그를 포함하고 있는 태그를 순차적으로 목록화한 것을 경로(path)라 한다.

웹 컨트롤
Label, TextBox, Button과 같이 흔히 윈도우나 대화상자를 구성하는 하나하나의 개체들이 ASP.NET 웹 페이지를 구성하는 개체로 사용될 때 이를 웹 컨트롤이라 한다.
도구 상자에 있는 웹 컨트롤을 드래드앤드롭 방식으로 ASP.NET 웹 페이지에 넣는다.

ASP.NET 페이지 코드 모델
ASP.NET 웹 페이지는 시각적인 부분을 표현하는 HTML 부분과 업무 로직을 담고 있는 소스 코드 부분으로 구성된다.
ASP.NET 웹 페이지는 소스 코드를 어디에 두는지에 따라 단일 파일 페이지 모델(Single-File Page Model)과 코드 숨김 파일 페이지 모델(Code-Behind Page Model)로 구분된다.
단일 파일 페이지 모델에서는 HTML 부분과 소스 코드 부분이 하나의 aspx 파일에 위치한다.
코드 숨김 파일 페이지 모델에서는 HTML 부분은 aspx 파일에, 소스 코드 부분은 cs 파일에 각각 위치한다.

이벤트(Event)와 이벤트 처리기(Event Handler)
컴퓨터나 프로그램 상에서 일어나는 사건을 이벤트(Event)라 한다.
이벤트가 발생하면 이를 적절하게 처리하기 위한 코드가 실행되는데 이를 이벤트 처리기(Event Handler)라 한다.

디버거(Debugger)
디버거는 실행되고 있는 프로그램 중간에 끼어들어(intercept) 프로그램의 실행 모습을 깊이 있게 보여주는 소프트웨어이다. 대부분의 경우 논리적 오류를 찾을 때 사용하지만 처음 프로그래밍을 배우는 경우 소스 코드를 분석하기 위한 보조 도구로도 사용한다.


<CHAPTER 03. ASP.NET 웹 페이지 개발을 위한 C#>
데이터형
데이터형은 크게 값형(Value Type)과 참조형(Reference Type) 구분
값형은 다시 C#에서 정의된 내장형(Built-In Type)과 사용자가 직접 정의하는 사용자정의형(User-Defined Type) 구분

사용자정의형
열거형 : 정수형 상수 그룹을 만들 때 사용
구조체 : 여러 데이터형으로 구성된 데이터들을 하나로 묶어 관리할 때 사용

참조형
문자열 : 문자들의 나열인 문자열은 string 키워드를 사용하여 변수 선언
배열 : 같은 데이터형을 갖는 일련의 데이터들을 저장하기 위해 배열 사용

형 변환
크기가 같거나 큰 데이터형으로의 변환은 묵시적으로 이루어짐
반대의 경우는 캐스팅을 통해 명시적으로 형 변환 해야

연산자
연산자는 기능에 따라 단항, 산술, 비트, 관계, 논리, 대입 연산자로 분류

제어문
프로그램의 흐름을 제어하는 역할을 담당하는 제어문은 선택문(if, switch), 반복문(for, foreach, while, do~while), 분기문(break, continue), 예외 처리문(try~catch~finally) 등이 있음

객체 지향 프로그래밍
클래스 : 객체 지향 프로그래밍의 핵심으로 참조형에 해당하는 사용자정의 데이터형
클래스는 실세계를 바탕으로 모델링
클래스 멤버 : 클래스 멤버로는 특성 정보를 담고 있는 필드, 행동 양식을 표현하는 메서드, 필드와 결합된 메서드인 속성 등이 있음
상속 : 기반이 되는 클래스로부터 새로운 클래스를 정의하는 방법
네임스페이스 : 같은 이름의 클래스라도 이를 정의한 분야에 따라 그 모양 다름. 네임스페이스는 이들 클래스를 구별하여 표현하는데 사용


<CHAPTER 04. 웹 폼과 응용 프로그램의 이해>
서버 컨트롤
ASP.NET은 웹 폼에 포함시킬 수 있는 두 가지 서버 컨트롤 제공
HTML 서버 컨트롤 : 표준 HTML 태그와 상응하는 서버 기반 컨트롤
웹 컨트롤 : 윈도우즈 기반 컨트롤과 같이 스타일이나 서식을 위한 다양한 속성을 풍부하게 제공

전송 방식(method)
HTTP에서 제공하는 대표적인 전송 방식에는 GET과 POST가 있다.
GET : URL을 통해 사용자 입력 정보를 서버로 전송하는 방식
POST : 요청 메시지에 사용자 입력 정보를 포함시켜 전송하는 방식

뷰 상태(View State)
hidden 필드에 압축된 형태로 페이지에 있는 모든 컨트롤의 상태 정보 유지
뷰 상태를 통해 상태가 없는 웹의 특성을 극복하고 페이지를 끊임없이 실행되는 응용 프로그램처럼 동작

Request 객체와 Response 객체
Request 객체 : 웹브라우저가 서버에 제공하는 모든 정보를 담은 객체
Response 객체 : 웹 서버가 웹브라우저에게 보내는 처리 결과 일체

Page 클래스 이벤트 발생 순서
Init → Load → (Control Events) → PreRender → Unload 순으로 발생

ASP.NET 응용 프로그램
ASP.NET 응용 프로그램은 웹 서버에 있는 가상 디렉터리로부터 작동될 수 있는 파일, 페이지, 모듈 그리고 실행 가능한 코드 등의 조합


<CHAPTER 05. 서버 컨트롤>