<ASP.NET 웹 페이지 개발을 위한 C#>
클래스 -> 객체 지향 프로그래밍의 핵심
클래스는 스택 메모리 영역에 주소를 가지고 있음
힙 메모리에 실제 값이 들어있고 참조하는 형태임

클래스 - 객체/인스턴스
객체 변수 선언 - 클래스를 이용하여 변수를 선언하는 것
객체의 생성 / 인스턴스의 생성 - new 키워드로 힙 메모리 영역에 메모리를 할당하는 경우

생성자는 class명과 똑같이 만듭니다
단, 무조건 public으로 하는 것이 좋습니다 - 반환형에 대한 부분은 없습니다

소멸자는 생성자와 같으나 메소드명 앞에 틸드(~)가 붙은 메소드 입니다
객체가 힙 메모리 공간에서사라질 때 처리되는 메소드 입니다 - 메모리 반환... 운영체제로 반환...

접근 한정자 - private(같은 class 내)와 public을 많이 사용한다
protected는 파생 class에서까지 접근이 가능합니다

속성은 property를 만드는 부분이다
Getter와 Setter에서 값을 체크 해야된다면 필요하다

class 속성에 대입한 값은 set에서 value로...

c#에서는 배후 필드와 코드 블록이 없는 속성인 자동속성을 지원합니다


키워드 this - 객체 내에서 클래스 멤버를 직접 참조할 때 사용
자신 자신의 참조 변수
자기 자신에 대한 참조 변수이므로 클래스를 벗어나면 사용 못함


<네임스페이스>
동일한 낱말도 분애에 따라 다르게 해석되는 경우가 많음
다른 네임스페이스에 있는 같은 이름의 객체는 다른 객체임을 나타내기 위해 사용합니다
using으로...


C# 프로그램의 구조

using Statements
namespace

class
	생성자 및 소멸자
	필드
	속성
	메소드


드래그 한 부분 주석 처리 하는법 - 드래그 후.... 선택한 줄 주석차리 합니다 클릭하면 된다(위에 있음!)